# Generated by nginxconfig.io
# https://www.digitalocean.com/community/tools/nginx

user www-data;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
	multi_accept on;
	worker_connections 65535;
}

http {
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	server_tokens off;
	log_not_found off;
	types_hash_max_size 2048;
	client_max_body_size 16M;

	# MIME
	include mime.types;
	default_type application/octet-stream;

	# logging
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log warn;

	# SSL
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;

	# Diffie-Hellman parameter for DHE ciphersuites
	ssl_dhparam /etc/nginx/dhparam.pem;

	# Mozilla Intermediate configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

	# OCSP Stapling
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
	resolver_timeout 2s;

	# load configs
	include /etc/nginx/conf.d/*.conf;

	# multiverse.my.to
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
	
		server_name multiverse.my.to;
		root /home/ubuntu/apps/multiverse/frontends/wrap-r/bundle/;
	
		# SSL
		ssl_certificate /etc/letsencrypt/live/multiverse.my.to/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/multiverse.my.to/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/multiverse.my.to/chain.pem;
	
		# security headers
		add_header X-Frame-Options "SAMEORIGIN" always;
		add_header X-XSS-Protection "1; mode=block" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header Referrer-Policy "no-referrer-when-downgrade" always;
		add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
		
		# . files
		location ~ /\.(?!well-known) {
			deny all;
		}
	
		# index.html fallback
		location / {
			try_files $uri $uri/ /index.html;
		}
	
		# favicon.ico
		location = /favicon.ico {
			log_not_found off;
			access_log off;
		}
		
		# robots.txt
		location = /robots.txt {
			log_not_found off;
			access_log off;
		}

        
        # reverse proxy
		location /auth {
			proxy_pass http://127.0.0.1:9090/auth;
			proxy_http_version	1.1;
			proxy_cache_bypass	$http_upgrade;
			
			proxy_set_header Upgrade			$http_upgrade;
			proxy_set_header Connection 		"upgrade";
			proxy_set_header Host				$host;
			proxy_set_header X-Real-IP			$remote_addr;
			proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto	$scheme;
			proxy_set_header X-Forwarded-Host	$host;
			proxy_set_header X-Forwarded-Port	$server_port;
		}

        # reverse proxy
		location /api/logg-r {
			proxy_pass http://127.0.0.1:9091/api/logg-r;
			proxy_http_version	1.1;
			proxy_cache_bypass	$http_upgrade;
			
			proxy_set_header Upgrade			$http_upgrade;
			proxy_set_header Connection 		"upgrade";
			proxy_set_header Host				$host;
			proxy_set_header X-Real-IP			$remote_addr;
			proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto	$scheme;
			proxy_set_header X-Forwarded-Host	$host;
			proxy_set_header X-Forwarded-Port	$server_port;
		}

		# reverse proxy
		location /api/xpense {
			proxy_pass http://127.0.0.1:9092/api/xpense;
			proxy_http_version	1.1;
			proxy_cache_bypass	$http_upgrade;
			
			proxy_set_header Upgrade			$http_upgrade;
			proxy_set_header Connection 		"upgrade";
			proxy_set_header Host				$host;
			proxy_set_header X-Real-IP			$remote_addr;
			proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto	$scheme;
			proxy_set_header X-Forwarded-Host	$host;
			proxy_set_header X-Forwarded-Port	$server_port;
		}
		
		# gzip
		gzip on;
		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
	}
	
	# subdomains redirect
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
	
		server_name *.multiverse.my.to;
	
		# SSL
		ssl_certificate /etc/letsencrypt/live/multiverse.my.to/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/multiverse.my.to/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/multiverse.my.to/chain.pem;
	
		return 301 https://multiverse.my.to$request_uri;
	}
	
	# HTTP redirect
	server {
		listen 80;
		listen [::]:80;
	
		server_name .multiverse.my.to;
	
		# ACME-challenge
		location ^~ /.well-known/acme-challenge/ {
			root /var/www/_letsencrypt;
		}
	
		location / {
			return 301 https://multiverse.my.to$request_uri;
		}
	}
}
